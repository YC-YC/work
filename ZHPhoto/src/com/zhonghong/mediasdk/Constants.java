package com.zhonghong.mediasdk;public class Constants {	/** File **/	public static final int FILE_TYPE_FILE = 0x1;	/** Picture **/	public static final int FILE_TYPE_PICTURE = 0x2;	/** Song **/	public static final int FILE_TYPE_SONG = 0x3;	/** Video **/	public static final int FILE_TYPE_VIDEO = 0x4;	/** Dir **/	public static final int FILE_TYPE_DIR = 0x5;	/** Return **/	public static final int FILE_TYPE_RETURN = 0x6;	/** Song dir**/	public static final int FILE_TYPE_SONGDIR = 0x7;	    /** Video dir**/	public static final int FILE_TYPE_VIDEODIR = 0x8;    /** photo dir**/	public static final int FILE_TYPE_PHOTODIR = 0x9;	/** total songs on device**/	public static final int FILE_TYPE_TTSONGS = 0xa;	/** total videos on device**/	public static final int FILE_TYPE_TTVIDEOS = 0xb;	/** total photos on device**/	public static final int FILE_TYPE_TTPHOTOS = 0xc;	/** total media files**/	public static final int FILE_TYPE_MEDIADIR = 0xd;		public static final String BUNDLE_INDEX = "current_index";	public static final String BUNDLE_INDEX_KEY = "com.jrm.index";	public static final String BUNDLE_LIST_KEY = "com.jrm.arraylist";	public static final String SOURCE_FROM = "sourceFrom";	public static final String ADAPTER_POSITION = "adapter.position";	public static final String BUNDLE_DATA_SRC= "data_src";  //local mode:0/external mode 1	public static final int LOCAL_SRC= 0; 	public static final int EXTERNAL_SRC= 1; 		public static final String BUNDLE_BASE_DATA= "filebasedata"; //file basedata	public static final String BUNDLE_DEVICE_ID= "device_id";    public final static int SDCARD_DEVICE = 0;    public final static int USB_DEVICE	= 1;    public final static int INTERNAL_DEVICE = 2;    public final static int INVALID_DEVICE = -1;    public final static int MAX_DEVICEID = INTERNAL_DEVICE;        //activity name    public static final String MUSICAPP_PKG = "com.zhonghong.media";    public static final String MUSICAPP_CLS = "com.zhonghong.media.music.MusicLauncher";    public static final String VIDEOAPP_PKG = "com.zhonghong.media";    public static final String VIDEOAPP_CLS = "com.zhonghong.media.video.VideoLauncher";    public static final String PHOTOAPP_PKG = "com.zhonghong.media";    public static final String PHOTOAPP_CLS = "com.zhonghong.media.photo.PhotoLauncher";    	//media type	public final static int MEDIA_TYPE_MUSIC = 0;	public final static int MEDIA_TYPE_VIDEO = 1;	public final static int MEDIA_TYPE_PHOTO = 2;	public final static int MEDIA_TYPE_UNKOWN = -1;	    //save application variable	public static final String ZHMEDIA_PREF = "ZHMedia";	public static final String ZHMUSIC_PREF = "ZHMusic";	public static final String ZHVIDEO_PREF = "ZHVideo";	public static final String ZHPHOTO_PREF = "ZHPhoto";	public static final String FIRST_RUN ="first_run";	public static final String PLAYBACK_DEV_ID ="playback_dev_id";	public static final String PLAYMODE = "playMode";	public static final String PLAYINDEX = "playIndex";	public static final String PLAYPOS="playposition";	public static final String EQMODE = "eqmode";	public static final String PLAYMUSICFILEPATH = "play_muisc_file_path";	public static final String BGPICINDEX = "backgroudpicindex";	public static final int INVALID_VALUE = -1;		public static final int CHOOSE_TIME = 18;	public static final int SEEK_TIME = 19;	public static final int HIDE_PLAYER_CONTROL = 13;	public static final String MPO = "mpo";		//storage device	/*public final static String DEFUSER_STORAGE_PATH = "/StorageCard";	public final static String DEFSD_STORAGE_PATH = "/StorageCard";	public final static String DEFUSB_STORAGE_PATH = "/UDisk";	public final static String DEFINTERNAL_STORAGE_PATH = "/HDM";*/	public final static String DEFUSER_STORAGE_PATH = "/mnt/SD1";	public final static String DEFSD_STORAGE_PATH = "/mnt/SD2";	public final static String DEFUSB_STORAGE_PATH = "/mnt/USB";	public final static String DEFINTERNAL_STORAGE_PATH = "/sdcard";			//define EQ mode	public static final int EQ_POP = 1;	public static final int EQ_CLASSIC = 2;	public static final int EQ_COUNTRY = 6;	public static final int EQ_JAZZ = 4;	public static final int EQ_ROCK = 3;	public static final int EQ_USER = 0;	public static final int EQ_FLAT = 9;	public static final int EQ_CLUB = 5;	public static final int EQ_DANCE = 7;	public static final int EQ_SOFT = 8;	public static final int EQ_CLEAR = 10;   //EQ_CINEMA	public static final int MAX_EQMODE = EQ_CLEAR;		//database status	public final static int DB_NOINITITAL = 0;	public final static int DB_PROCESSING = 1;	public final static int DB_FINISHED   = 2;	public final static String DB_ERROR_NOFILE = "error:nofile";		//play mode	public static final int PM_REPSINGLE = 0;	public static final int PM_REPALL = 1;	public static final int PM_RANDOM = 2;    public static final int MAX_PLAYMODE = PM_RANDOM;        //random on or off    public static final int RANDOM_ON = 0;    public static final int RANDOM_OFF = 1;	    //play status	public final static int PB_STOP		     = 0;	public final static int PB_PAUSE	     = 1;	public final static int PB_PLAY		     = 2;		//volume mute status	public final static int VOL_UNMUTE		 = 0;	public final static int VOL_MUTE		 = 1;		//video playback surface status	public final static int VPB_SV_DESTROY	 = 0;	public final static int VPB_SV_CREATE	 = 1;	public final static int VPB_SV_CHANGAE	 = 2;		//player ready	public final static int MP_IDLE		 = 0;	public final static int MP_READY	 = 1;	public final static int MP_PB	 	 = 2;		//carui broadcast info	public static final String CARUI_MUTE_ACTION = "com.zhonghong.carui.bmute";		//CAR UI EXIT BROADCAST ACTION AND DATA	public static final String CARUI_EXIT_ACTION = "com.zhonghong.carui.exitstate";	public static final String EXIT3GANDBT = "exit3gandbt";			public static final String EXITBTTALKING = "exitbttalking";		public static final String EXIT3GTALKING = "exit3gtalking";		public static final String EXITPARK = "exitpark";	public static final String EXITIPOD = "exitipod";	public static final String PAUSEMP3 = "pause_mp3";	public static final String PLAYMP3 = "paly_mp3";	public static final String EXITMP3 = "exitmp3";		public static final String CARUI_KEY_ACTION = "com.zhonghong.carui.key";	public static final int LEFTROTATE = 0x8B;	public static final int RIGHTROTATE = 0x8C;	public static final int RIGHTPUSH = 0x10;	public static final String TFT_OFF = "entertftoff";	public static final String TFT_ON = "exittftoff";		//ZUI internal navigation broadcast protocol	public static String ACTION_ZHONGHONG_NAVISOUND = "zhonghong.Navi.voiceprotocol";	public static String ZH_VOICE_PROTOCOL = "VOICEPROTOCOL";	public static String ZH_VOICE_PLAY = "play";	public static String ZH_VOICE_STOP = "stop";	public static String ZH_GPS_MONITOR_STATE = "gpsmonitor";	public static String ZH_GPS_MIX_STATE = "gpsmix";	public static String ZH_NAV_ON_TOP = "navtop";	    //MUSIC SERVICE CALLBACK MSG TO UI	public static String RESCAN_MEDIA_DEV ="rescan_media_dev";	public static String NO_MUSIC_FILE ="no_musicfile";	public static String NO_LRC_FILE ="no_lrcfile";	public static String PLAYER_READY ="player_ready";	public static String PB_ID3UPDATE = "pb_id3update"; //notify playback id3 update		//VIDEO SERVICE CALLBACK MSG TO UI	public static String NO_VIDEO_FILE ="no_videofile";	public static String SHOW_DRIVING_WARNING ="show_drvingwarning";	public static String CLOSE_DRIVING_WARNING ="close_drvingwarning";			//PHOTO SERVICE CALLBACK MSG TO UI	public static String NO_PHOTO_FILE ="no_photofile";		//FILE MANAGER	public static final int FM_OP_NONE				= 0;	public static final int FM_OP_COPY				= 1;	public static final int FM_OP_DEL				= 2;	public static final int FM_OP_CUT				= 3;		public static final int FM_WARN_SAMEFILE 				= 1;	public static final int FM_ERROR_UNKOWN 				= -1;	public static final int FM_ERROR_NOSPACE 				= -2;	public static final int FM_ERROR_OVFDNAME 			= -3;	public static final int FM_ERROR_INVALIDPASTE 	    = -4;		// setting watch video flag	public static final int PROHIBT_WATCHVIDEO_FLAG =0x08;		//zhonghong media service	public static String ACTION_ZHMEDIA_SCANNER_STARTED ="zhonghong.media.scanner.started";	public static String ACTION_ZHMEDIA_SCANNER_FINISHED ="zhonghong.media.scanner.finished";	public static String SCANNING_DEVID	="scanning_devid";		//ZUI internal music control protocol	public static String ACTION_ZHONGHONG_MUISC = "zhonghong.music.control";	public static String ZH_MUSIC_UNCARE_BROADKEY = "UNCAREBROADCAST_KEY";		//Music broadcast control protocol    public static final String PLAYSTATE_CHANGED = "com.zhonghong.music.playstatechanged";    public static final String META_CHANGED = "com.zhonghong.music.metachanged";    public static final String QUEUE_CHANGED = "com.zhonghong.music.queuechanged";    public static final String PLAYER_STOP = "com.zhonghong.music.stop";    public static final String ALL_CHANGED = "com.zhonghong.music.allchanged";        public static final String CMDAPPWIDGETUPDATE = "appwidgetupdate";    public static final String MUSICSERVICE_NAME = "com.zhonghong.mediasdk.music.MusicService";    public static final String MUSICSERVICECMD = "com.zhonghong.music.musicservicecommand";    public static final String CMDNAME = "command";    public static final String CMDTOGGLEPAUSE = "togglepause";    public static final String CMDSTOP = "stop";    public static final String CMDPAUSE = "pause";    public static final String CMDPLAY = "play";    public static final String CMDPREVIOUS = "previous";    public static final String CMDNEXT = "next";        public static final String TOGGLEPAUSE_ACTION = "com.zhonghong.music.musicservicecommand.togglepause";    public static final String PAUSE_ACTION = "com.zhonghong.music.musicservicecommand.pause";    public static final String PREVIOUS_ACTION = "com.zhonghong.music.musicservicecommand.previous";    public static final String NEXT_ACTION = "com.zhonghong.musicservicecommand.next";        //Error msg    public static final String SERROR_UNKNOWN = "error_unknown";    public static final String SERROR_MALFORMED = "error_malformed";    public static final String SERROR_IO = "error_io";    public static final String SERROR_UNSUPPORTED = "error_unsupported";    public static final String SERROR_FILE_FORMAT_UNSUPPORT = "error_file_format_unsupport";    public static final String SERROR_NOT_CONNECTED = "error_not_connected";    public static final String SERROR_AUDIO_UNSUPPORT = "video media error audio unsupport";    public static final String SERROR_VIDEO_UNSUPPORT = "error_video_unsupport";    public static final String SERROR_DRM_NO_LICENSE = "error_drm_no_license";    public static final String SERROR_DRM_LICENSE_EXPIRED = "error_drm_license_expired";    public static final String SERROR_MEDIA_SERVER_DIED = "error_media_server_died";    public static final String SERROR_MEDIA_NOT_VALID = "error_media_not_valid";        /**     *      */    public static final String audio_filter[]={        ".mp3",        ".wma",        ".aac",        ".ogg",        ".pcm",        ".m4a",        ".ac3",        ".ec3",        ".dtshd",           ".mka",        ".ra",        ".wav",        ".cd",        ".amr",        ".mp2",        ".ape",        ".dts",        ".flac",        ".mid",        ".mpc",        ".tta",        ".asx",        ".aiff",        ".au"    };    /**     *      */    public static final String video_filter[]={        ".avi",        ".asf",        ".wmv",        ".m2t",        ".mts",        ".ts",        ".mpg",        ".m2p",        ".mp4",        ".flv",        ".swf",        ".vob",        ".mkv",        ".divx",        ".xvid",        ".mov",        ".rmvb",        ".rv",        ".3gp",        ".dat",        ".pmp",        ".tp",        ".trp",        ".rm",        ".webm",        ".m2ts",        ".ssif",        ".mpeg",        ".mpe",        ".m3u8",               ".m4v",        ".3g2",             ".f4v",              ".3gpp"    };        /**     *      */    public static final String photo_filter[]={        ".jpg",        ".jpeg",        ".png",        ".bmp",        ".gif",        ".tiff",        ".exif",        ".fpx",        ".svg",        ".cdr",        ".pcd",        ".dxf",        ".ufo",        ".eps",        ".raw",        ".mpo"    };   //==========================================================================	//Define handle msg command    public static final int CMD_MSG_START_ID		= 0x1000;    /**     * next music/video/photo     */	public static final int CMD_MSG_NEXT_ITEM		= CMD_MSG_START_ID+1;	/**	 * previous music/video/photo	 */	public static final int CMD_MSG_PREV_ITEM		= CMD_MSG_START_ID+2;	/**	 * change play mode	 */	public static final int CMD_MSG_PLAY_MODE		= CMD_MSG_START_ID+3;	/**	 * send play/pause	 */	public static final int CMD_MSG_PLAY_PAUSE		= CMD_MSG_START_ID+4;	/**	 * select browser device	 */	public static final int CMD_MSG_SEL_DEV			= CMD_MSG_START_ID+5;	/**	 * select browser folder index	 */	public static final int CMD_MSG_SEL_FOLDER		= CMD_MSG_START_ID+6;	/**	 * select browser file index	 */	public static final int CMD_MSG_SEL_FILE		= CMD_MSG_START_ID+7;	/**	 * seek to postion	 */	public static final int CMD_MSG_SEEK            = CMD_MSG_START_ID+8;	/**	 * volume mute control	 */	public static final int CMD_MSG_MUTE            = CMD_MSG_START_ID+9;	/**	 * initial folder/file/dev inital focus position,sync playback info	 */	public static final int CMD_MSG_SYNC_BRPB_INFO  = CMD_MSG_START_ID+10;	/**	 * random on/off	 */	public static final int CMD_MSG_RANDOM  		= CMD_MSG_START_ID+11;	/**	 * repeat all /single	 */	public static final int CMD_MSG_REPEAT_ALL_1  	= CMD_MSG_START_ID+12;	/**	 * update video play surface object	 */	public static final int CMD_MSG_UPDATE_VIDEO_SURFACE = CMD_MSG_START_ID+13;	/**	 * ZOOM IN	 */	public static final int CMD_MSG_ZOOM_IN 			= CMD_MSG_START_ID+14;	/**	 * ZOOM OUT	 */	public static final int CMD_MSG_ZOOM_OUT 			= CMD_MSG_START_ID+15;	/**	 * Rorate left	 */	public static final int CMD_MSG_LEFT_ROTATE 		= CMD_MSG_START_ID+16;	/**	 * ZOOM OUT	 */	public static final int CMD_MSG_RIGHT_ROTATE 		= CMD_MSG_START_ID+17;	/**	 * Photo Setting	 */	public static final int CMD_MSG_PHOTO_SETTING		= CMD_MSG_START_ID+18;	/**	 * send pause	 */	public static final int CMD_MSG_PAUSE				= CMD_MSG_START_ID+19;		/**	 * copy wendan	 */	public static final int CMD_MSG_COPY  				=CMD_MSG_START_ID+20;	/**	 * cut wendan	 */	public static final int CMD_MSG_CUT  				=CMD_MSG_START_ID+21;	/**	 * paste wendan	 */	public static final int CMD_MSG_PASTE  				=CMD_MSG_START_ID+22;	/**	 * delete wendan	 */	public static final int CMD_MSG_DELETE  			=CMD_MSG_START_ID+23;	/**	 * File manage user respond yes / no	 */	public static final int CMD_MSG_USERRESP 			= CMD_MSG_START_ID+24;	/**	 * File manage delete current playback file	 */	public static final int CMD_MSG_DELETE_PBFILE 		= CMD_MSG_START_ID+25;	/**	 * Õû¸öMusic listµÄTotal index	 */	public static final int CMD_MSG_SEL_TOTAL_FILE 		= CMD_MSG_START_ID +26;	//==========================================================================	//Define handle msg callback	public static final int CB_MSG_START_ID		= 0x2000;	/**	 * CB_MSG_PB_TIME,provide current playback time / total time	 */	public static final int CB_MSG_PB_TIME			= CB_MSG_START_ID+1;	/**	 * CB_MSG_PB_STATUS,provide play status(play/pause),play mode(repeat single/all/random)	 * bMute,mute status	 */	public static final int CB_MSG_PB_STATUS		= CB_MSG_START_ID+2;	/**	 * CB_MSG_PB_INFO,provide playback item id3 etc info	 * music name / albume name / singer name / ablume picture	 */	public static final int CB_MSG_PB_INFO 		    = CB_MSG_START_ID+3;	/**	 * CB_MSG_PB_LRC,provide lyric for current time	 */	public static final int CB_MSG_PB_LRC			= CB_MSG_START_ID+4;	/**	 * CB_MSG_PB_EXIT,exit playback status	 */	public static final int CB_MSG_PB_EXIT			= CB_MSG_START_ID+5;	/**	 * no file found	 */	public static final int CB_MSG_NO_FILE			= CB_MSG_START_ID+6;	/**	 * Player ready,close loading animiation	 */	public static final int CB_MSG_PLAYER_READY	    = CB_MSG_START_ID+7;	/**	 * data no ready,show busy animiation	 */	public static final int CB_MSG_DATA_NOREADY		= CB_MSG_START_ID+8;	/**	 * data ready,close busy animiation	 */	public static final int CB_MSG_DATA_READY		= CB_MSG_START_ID+9;	/**	 * volume status update msg	 */	public static final int CB_MSG_MUTE_STATUS		= CB_MSG_START_ID+10;	/**	 * play status update msg	 */	public static final int CB_MSG_PLAYPAUSE_STATUS	= CB_MSG_START_ID+11;	/**	 * playmode update msg	 */	public static final int CB_MSG_PLAYMODE_STATUS  = CB_MSG_START_ID+12;	/**	 * eq update msg	 */	public static final int CB_MSG_EQMODE           = CB_MSG_START_ID+13;	/**	 * device list data update msg	 */	public static final int CB_MSG_DEVLIST_REFRESH    = CB_MSG_START_ID+14;	/**	 * folder list data update msg	 */	public static final int CB_MSG_FDLIST_REFRESH    = CB_MSG_START_ID+15;	/**	 * file list data update msg	 */	public static final int CB_MSG_FLLIST_REFRESH    = CB_MSG_START_ID+16;	/**	 * file list data update msg	 */	public static final int CB_MSG_PB_ID3UPDATE      = CB_MSG_START_ID+17;	/**	 * browser dev no file	 */	public static final int CB_MSG_BR_DEVNOFILE      = CB_MSG_START_ID+18;	/**	 * new device mounted msg	 */	public static final int CB_MSG_SCAN_LOADING     = CB_MSG_START_ID+19;	/**	 * driving warning msg,para1:1 show msg / 0 close msg	 */	public static final int CB_MSG_DRIVING_WARNING   = CB_MSG_START_ID+20;	/**	 * Photo imageview single click event	 */	public static final int CB_MSG_SINGLECLICK_EVENT  = CB_MSG_START_ID+21;	//FILE MANAGER CALLBACK	/**	 * Show coping progress	 */	public static final int CB_MSG_START_PROGRESS     = CB_MSG_START_ID+22;	/**	 * Close coping progress dialog	 */	public static final int CB_MSG_FC_PROGRESS     = CB_MSG_START_ID+23;	/**	 * update progress	 */	public static final int CB_MSG_UPDATE_PROGRESS     = CB_MSG_START_ID+24;	/**	 * show interface dialog,eg. error msg,replace dialog	 */	public static final int CB_MSG_SHOW_DIALOG     = CB_MSG_START_ID+25;	//==========================================================================	//define internal system use MSG	public static final int USYS_MSG_START_ID		= 0x3000;	/**	 * user system timer message	 */	public static final int USYS_MSG_TIMER		    = USYS_MSG_START_ID+1;}